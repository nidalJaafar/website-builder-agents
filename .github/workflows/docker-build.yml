name: Build and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest image (no login needed for public images)
            docker pull ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            
            # Stop and remove old container if it exists
            docker stop my-app || true
            docker rm my-app || true
            
            # Run the new container
            docker run -d \
              --name my-app \
              -p 80:8080 \
              --restart unless-stopped \
              -e GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} \
              ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            
            # Clean up old images
            docker image prune -af